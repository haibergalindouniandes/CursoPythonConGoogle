<mxfile host="Electron" modified="2024-01-21T22:08:01.094Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/22.0.2 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36" etag="37QJxzxsmcXQRjPzaKYY" version="22.0.2" type="device">
  <diagram name="Page-1" id="QayhTdDBolED5kI1ZOli">
    <mxGraphModel dx="2045" dy="703" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="oxw2ySleG6MQdkz9VDhC-1" value="&lt;h1&gt;Problema&lt;/h1&gt;&lt;p&gt;En la compañia existe un servicio muy utilizado llamado Ticky, el cual es un sistema interno de tickets utilizado por varios equipos.&lt;/p&gt;&lt;p&gt;Este servicio genera una gran cantidad de logs de diferentes ya sean exitoso o fallidos (INFO, ERROR).Los diferentes equipo solicitan nuestro apoyo para poder extraer información de estos logs y generar un reporte con la finalidad de entender mucho mas facil y practico, el como esta siendo usado el sistema y como puede ser mejorado.&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;Se debe realizar la creación del algunos scripts de automatizacion que procesara el sistema de logs y generara un .reporte basado en la extracción de información de los archivos de logs. Los logs registrarán información con el siguiente formato:&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;div style=&quot;border-color: var(--border-color); color: rgb(171, 178, 191); background-color: rgb(40, 44, 52); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;May 27&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;11&lt;/span&gt;:&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;45&lt;/span&gt;:&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;40&lt;/span&gt;&amp;nbsp;ubuntu.local ticky:&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;INFO&lt;/span&gt;: Created ticket [&lt;span style=&quot;border-color: var(--border-color); color: rgb(127, 132, 142);&quot;&gt;#1234] (unsername)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Jun &amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;1&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;11&lt;/span&gt;:&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(255, 255, 255);&quot;&gt;6&lt;/span&gt;:&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;48&lt;/span&gt;&amp;nbsp;ubuntu.local ticky:&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;ERROR&lt;/span&gt;: Connection to&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(209, 154, 102);&quot;&gt;DB&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(97, 175, 239);&quot;&gt;failed&lt;/span&gt;&amp;nbsp;(username)&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;Los desarrolladores esperan que se generen dos reportes:&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;-&amp;nbsp;&lt;b&gt;El primero es un ranking de errores generados por el sistema&lt;/b&gt;. Esto significa una lista de todos los mensajes de error registrados y cuántas veces se encontró cada uno de ellos, sin tener en cuenta los usuarios involucrados. Deben ordenarse desde el error más común hasta el error menos común.&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;-&amp;nbsp;&lt;b&gt;El segundo son las estadísticas de uso del servicio&lt;/b&gt;. Esto significa, una lista de todos los usuarios que han utilizado el sistema, incluyendo cuántos mensajes de información y cuántos mensajes de error han generado. Este informe debe ordenarse por nombre de usuario.&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Para visualizar los datos en estos informes, desea generar un par de páginas web que serán atendidas por un servidor web que se ejecuta en la máquina. Para hacer esto, puede utilizar un script que ya está en el sistema llamado csv_to_html.py.&amp;nbsp;Este script convierte los datos de un archivo CSV en un archivo HTML que contiene una tabla con los datos.&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Luego, coloque los archivos en el directorio que utiliza el servidor web para mostrar las páginas web. El objetivo es tener un script que pueda realizar todo el trabajo necesario automáticamente, todos los días, sin interacción del usuario.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;No es necesario que este script haga todo el trabajo por sí solo. Puede recurrir a otros scripts para realizar tareas individuales y luego reunir los resultados. De hecho, recomendamos dividir la tarea para que cada pieza pueda escribirse y probarse por separado.&lt;/span&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-830" y="10" width="780" height="500" as="geometry" />
        </mxCell>
        <mxCell id="oxw2ySleG6MQdkz9VDhC-5" value="&lt;h1&gt;Investigación y planificación&lt;/h1&gt;&lt;p&gt;Hemos dicho que queremos encontrar algunas líneas de registro específicas en el archivo de registro syslog. Le recomendamos encarecidamente que utilice expresiones regulares para encontrarlos.&amp;nbsp;Será más fácil extraer la información que deseas de esa manera. Para encontrar la expresión regular correcta, puede utilizar un sitio web como regex101.com que puede ayudarle a probar su expresión y comprender qué sucede con ella.&lt;/p&gt;&lt;p&gt;Una vez que tenga un patrón en el que piense y trabaje, pruébelo en un intérprete de Python para verificar que coincida con las líneas correctas y capture la información correcta. Después de extraer la información, necesitarás contar cuántos errores son del mismo tipo y cuánta&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;información y mensajes de error hay para un usuario determinado.&amp;nbsp;&lt;/span&gt;Querrás utilizar un par de diccionarios diferentes. Uno para los mensajes de error de la cuenta y otro para contar el uso por usuario. Luego deberás ordenar los datos en los diccionarios según diferentes criterios.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Analizamos la clasificación en el curso de Introducción a Python. No dudes en volver a ver ese vídeo y volver a leer la documentación de Python sobre clasificación. La salida de su secuencia de comandos Python debe ser un par de archivos CSV. Cada uno de ellos contiene los nombres de las columnas y los datos en el orden en que deben presentarse.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Una vez que se generen esos archivos, deberá llamar al script CSV html.py para crear archivos HTML basados ​​en datos CSV. Tendrá acceso para ver cómo funciona el script, pero la clave es pasarle dos parámetros. El nombre del archivo CSV a leer y el nombre del generador de archivos HTML. Puede realizar este último paso desde un script de Python o desde un script de bash. Dado que el script solo llamará comandos y moverá archivos, recomendamos realizar un bash.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-830" y="540" width="780" height="390" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
